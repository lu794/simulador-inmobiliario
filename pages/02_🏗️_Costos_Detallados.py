import streamlit as st
import pandas as pd

# No se llama a st.set_page_config() en las p√°ginas secundarias.
st.title("üèóÔ∏è Detalle de Costos del Proyecto")
st.markdown("Introduce los costos directos de urbanizaci√≥n y construcci√≥n. Puedes a√±adir, editar o eliminar filas. Los totales se calcular√°n autom√°ticamente y se usar√°n en la p√°gina de 'Resumen del Proyecto'.")

# --- Inicializar el estado de la sesi√≥n para guardar los datos ---
# NOTA: Es normal que tu editor de c√≥digo subraye 'st.session_state' como un error.
# ¬°Ign√≥ralo! Es una caracter√≠stica de Streamlit y funcionar√° correctamente al ejecutar.
if 'costos_urbanizacion_df' not in st.session_state:
    # Datos de ejemplo basados en tu descripci√≥n
    data_urbanizacion = {
        'Concepto': ['Agua potable', 'Aguas negras', 'Energ√≠a el√©ctrica', 'Apertura de calles', 'Pavimento interno', 'Muro perimetral'],
        'Unidad': ['Global', 'Global', 'Global', 'm¬≤', 'm¬≤', 'm'],
        'Cantidad': [1.0, 1.0, 1.0, 1500.0, 1200.0, 300.0],
        'Precio Unitario': [15000.0, 12000.0, 25000.0, 8.50, 22.0, 45.0],
    }
    df = pd.DataFrame(data_urbanizacion)
    df['Costo Total'] = df['Cantidad'] * df['Precio Unitario']
    st.session_state.costos_urbanizacion_df = df

if 'costos_construccion_df' not in st.session_state:
    # Datos de ejemplo para la construcci√≥n de una vivienda tipo
    data_construccion = {
        'Partida': ['Preliminares', 'Cimentaci√≥n', 'Estructura', 'Paredes', 'Techo', 'Acabados'],
        'Unidad': ['m¬≤', 'm¬≥', 'Global', 'm¬≤', 'm¬≤', 'm¬≤'],
        'Cantidad': [100.0, 15.0, 1.0, 180.0, 110.0, 100.0],
        'Precio Unitario': [12.0, 150.0, 8000.0, 25.0, 35.0, 60.0],
    }
    df = pd.DataFrame(data_construccion)
    df['Costo Total'] = df['Cantidad'] * df['Precio Unitario']
    st.session_state.costos_construccion_df = df


# --- Tablas Interactivas para Costos ---

st.subheader("Detalle de Costos de Urbanizaci√≥n")
# st.data_editor crea una tabla editable tipo Excel
edited_urbanizacion_df = st.data_editor(
    st.session_state.costos_urbanizacion_df,
    num_rows="dynamic", # Permite al usuario a√±adir y borrar filas
    use_container_width=True,
    key="editor_urbanizacion", # A√±adir una clave √∫nica ayuda a evitar errores
    column_config={
        "Costo Total": st.column_config.NumberColumn(
            "Costo Total ($)",
            help="Se calcula autom√°ticamente (Cantidad * Precio Unitario)",
            disabled=True, # La columna no se puede editar manualmente
            format="$ {:,.2f}",
        ),
        "Precio Unitario": st.column_config.NumberColumn(format="$ %.2f"),
    }
)
# Recalcular el total si se edita la tabla y guardar los cambios en el estado de la sesi√≥n
if edited_urbanizacion_df is not None:
    edited_urbanizacion_df['Costo Total'] = edited_urbanizacion_df['Cantidad'] * edited_urbanizacion_df['Precio Unitario']
    st.session_state.costos_urbanizacion_df = edited_urbanizacion_df


st.subheader("Estructura de Costo de Construcci√≥n de Vivienda (por unidad)")
edited_construccion_df = st.data_editor(
    st.session_state.costos_construccion_df,
    num_rows="dynamic",
    use_container_width=True,
    key="editor_construccion", # A√±adir una clave √∫nica ayuda a evitar errores
    column_config={
        "Costo Total": st.column_config.NumberColumn(
            "Costo Total ($)",
            help="Se calcula autom√°ticamente (Cantidad * Precio Unitario)",
            disabled=True,
            format="$ {:,.2f}",
        ),
        "Precio Unitario": st.column_config.NumberColumn(format="$ %.2f"),
    }
)
# Recalcular el total y guardar cambios
if edited_construccion_df is not None:
    edited_construccion_df['Costo Total'] = edited_construccion_df['Cantidad'] * edited_construccion_df['Precio Unitario']
    st.session_state.costos_construccion_df = edited_construccion_df


# --- C√°lculos y almacenamiento en el estado de la sesi√≥n ---
total_urbanizacion = st.session_state.costos_urbanizacion_df['Costo Total'].sum()
total_construccion_unitaria = st.session_state.costos_construccion_df['Costo Total'].sum()

st.subheader("Totales de Costos Directos")
col1, col2 = st.columns(2)
col1.metric("Costo Total de Urbanizaci√≥n", f"${total_urbanizacion:,.2f}")
col2.metric("Costo de Construcci√≥n por Vivienda", f"${total_construccion_unitaria:,.2f}")

# Guardar los totales para que la p√°gina principal pueda usarlos
st.session_state.total_urbanizacion = total_urbanizacion
st.session_state.total_construccion_unitaria = total_construccion_unitaria

st.success("¬°Costos actualizados! Vuelve a la p√°gina 'Resumen del Proyecto' para ver el impacto en el an√°lisis financiero.")
You can now view your Streamlit app in your browser.

Local URL: http://localhost:8501
Network URL: http://...
